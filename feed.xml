<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://suraj-bhor.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://suraj-bhor.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-11T19:16:31+00:00</updated><id>https://suraj-bhor.github.io/feed.xml</id><title type="html">Suraj Bhor</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">a post with code diff</title><link href="https://suraj-bhor.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://suraj-bhor.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://suraj-bhor.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://suraj-bhor.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://suraj-bhor.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/echarts</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry><entry><title type="html">a post with chart.js</title><link href="https://suraj-bhor.github.io/blog/2024/chartjs/" rel="alternate" type="text/html" title="a post with chart.js"/><published>2024-01-26T01:04:00+00:00</published><updated>2024-01-26T01:04:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2024/chartjs</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2024/chartjs/"><![CDATA[<p>This is an example post with some <a href="https://www.chartjs.org/">chart.js</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-chartjs">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included chart.js code could look like]]></summary></entry><entry><title type="html">a post with TikZJax</title><link href="https://suraj-bhor.github.io/blog/2023/tikzjax/" rel="alternate" type="text/html" title="a post with TikZJax"/><published>2023-12-12T22:25:00+00:00</published><updated>2023-12-12T22:25:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2023/tikzjax</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2023/tikzjax/"><![CDATA[<p>This is an example post with TikZ code. TikZJax converts script tags (containing TikZ code) into SVGs.</p> <script type="text/tikz">
\begin{tikzpicture}
    \draw[red,fill=black!60!red] (0,0) circle [radius=1.5];
    \draw[green,fill=black!60!green] (0,0) circle [x radius=1.5cm, y radius=10mm];
    \draw[blue,fill=black!60!blue] (0,0) circle [x radius=1cm, y radius=5mm, rotate=30];
\end{tikzpicture}
</script>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry><entry><title type="html">a post with bibliography</title><link href="https://suraj-bhor.github.io/blog/2023/post-bibliography/" rel="alternate" type="text/html" title="a post with bibliography"/><published>2023-07-12T13:56:00+00:00</published><updated>2023-07-12T13:56:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2023/post-bibliography</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2023/post-bibliography/"><![CDATA[<p>This post shows how to add bibliography to simple blog posts. We support every citation style that <a href="https://github.com/inukshuk/jekyll-scholar">jekyll-scholar</a> does. That means simple citation like <a class="citation" href="#einstein1950meaning">(Einstein &amp; Taub, 1950)</a>, multiple citations like <a class="citation" href="#einstein1950meaning">(Einstein &amp; Taub, 1950; Einstein, 1905)</a>, long references like <span id="einstein1905movement">Einstein, A. (1905). Un the movement of small particles suspended in statiunary liquids required by the molecular-kinetic theory 0f heat. <i>Ann. Phys.</i>, <i>17</i>, 549–560.</span> or also quotes:</p> <blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit,<br/>sed do eiusmod tempor.</p><p>Lorem ipsum dolor sit amet, consectetur adipisicing.</p><cite><a class="citation" href="#einstein1905electrodynamics">(Einstein, 1905)</a></cite></blockquote> <p>If you would like something more academic, check the <a href="/blog/2021/distill/">distill style post</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="bib"/><summary type="html"><![CDATA[an example of a blog post with bibliography]]></summary></entry><entry><title type="html">a post with jupyter notebook</title><link href="https://suraj-bhor.github.io/blog/2023/jupyter-notebook/" rel="alternate" type="text/html" title="a post with jupyter notebook"/><published>2023-07-04T12:57:00+00:00</published><updated>2023-07-04T12:57:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2023/jupyter-notebook</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2023/jupyter-notebook/"><![CDATA[<p>To include a jupyter notebook in a post, you can use the following code:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{::nomarkdown}
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'assets/jupyter/blog.ipynb'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">relative_url</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">file_exists</span><span class="w"> </span>assets/jupyter/blog.ipynb<span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'true'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">jupyter_notebook</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">%}</span>
  &lt;p&gt;Sorry, the notebook you are looking for does not exist.&lt;/p&gt;
<span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>
{:/nomarkdown}
</code></pre></div></div> <p>Let’s break it down: this is possible thanks to <a href="https://github.com/red-data-tools/jekyll-jupyter-notebook">Jekyll Jupyter Notebook plugin</a> that allows you to embed jupyter notebooks in your posts. It basically calls <a href="https://nbconvert.readthedocs.io/en/latest/usage.html#convert-html"><code class="language-plaintext highlighter-rouge">jupyter nbconvert --to html</code></a> to convert the notebook to an html page and then includes it in the post. Since <a href="https://jekyllrb.com/docs/configuration/markdown/">Kramdown</a> is the default Markdown renderer for Jekyll, we need to surround the call to the plugin with the <a href="https://kramdown.gettalong.org/syntax.html#extensions">::nomarkdown</a> tag so that it stops processing this part with Kramdown and outputs the content as-is.</p> <p>The plugin takes as input the path to the notebook, but it assumes the file exists. If you want to check if the file exists before calling the plugin, you can use the <code class="language-plaintext highlighter-rouge">file_exists</code> filter. This avoids getting a 404 error from the plugin and ending up displaying the main page inside of it instead. If the file does not exist, you can output a message to the user. The code displayed above outputs the following:</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note that the jupyter notebook supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="jupyter"/><summary type="html"><![CDATA[an example of a blog post with jupyter notebook]]></summary></entry><entry><title type="html">Computer Vision Basics (Part 1)- Image Formation</title><link href="https://suraj-bhor.github.io/blog/2023/CV-2/" rel="alternate" type="text/html" title="Computer Vision Basics (Part 1)- Image Formation"/><published>2023-05-25T00:00:00+00:00</published><updated>2023-05-25T00:00:00+00:00</updated><id>https://suraj-bhor.github.io/blog/2023/CV-2</id><content type="html" xml:base="https://suraj-bhor.github.io/blog/2023/CV-2/"><![CDATA[<h2 id="11-primitives-and-transformations">1.1 Primitives and Transformations</h2> <p>Geometric primitives are the basic building blocks used to describe 3D shapes. In this section, points, lines and planes will be introduced. We will also discuss some basic transformations.</p> <p>2D points can be written in inhomogeneous coordinated (as opposed to homogenous ones) by</p> \[x = \begin{pmatrix} x \\ y \end{pmatrix} \in \mathbb{R}^2\] <p>or in homogenous coordinates as</p> \[x = \begin{pmatrix} \widetilde{x} \\ \widetilde{y} \\ \widetilde{w} \end{pmatrix} \in \mathbb{P}^2\] <p>where \(\mathbb{P}^2 = \mathbb{R}^3 \backslash \{(0,0,0)\}\) is called <span style="color: red;">projective space.</span> Introducing a third coordinate here, we are in 3D space (except at 0,0,0). A tilde sign is a convention for a homogeneous coordinates. Homogeneous vectors are considered as equivalent when they differ onl up to scale. Thats why projective space is effectively only 2D.</p> <p>An <strong>inhomogeneous</strong> vector x is converted to a <strong>homogeneous</strong> vector x as follows:</p> \[\widetilde{x} = \begin{pmatrix} \widetilde{x} \\ \widetilde{y} \\ \widetilde{w} \end{pmatrix} = \begin{pmatrix} x \\ y \\ 1 \end{pmatrix} = \begin{pmatrix} x \\ 1 \end{pmatrix} = \bar{x}\] <p>with augmented vector \(\bar{x}\). We say augmented vector \(\bar{x}\) for all homogeneous vectors which last coordinate is equal to 1.</p> <p>To convert in the opposite direction we divide by the last element \(\widetilde{w}:\)</p> \[x = \begin{pmatrix} x \\ 1 \end{pmatrix} = \begin{pmatrix} x \\ y \\ 1 \end{pmatrix} = \frac{1}{\widetilde{w}} \widetilde{x} = \frac{1}{\widetilde{w}} \begin{pmatrix} \widetilde{x} \\ \widetilde{y} \\ \widetilde{w} \end{pmatrix} = \begin{pmatrix} \widetilde{x}\mathbin{/}{\widetilde{w}} \\ \widetilde{y}\mathbin{/}{\widetilde{w}} \\ 1 \end{pmatrix}\] <p>Like this, the last element of the homogeneous vector turens into a 1 and we can read off the x and y for the inhomogeneous coordinates. Homogeneous points whose last element is \(\widetilde{w} = 0\) are called <strong>ideal points</strong> or <strong>points at infinity</strong>. These poinits can’t be represented with inhomogeneous coordinates as we can’t divide by \(\widetilde{w}\).<d-footnote>The transformation from homogenous to inhomogeneous vectors resembles a lot the perspective translation that is introduced later.</d-footnote></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/2dpoints_cv1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 1: Visual relation between 2D points both in Homogeneous and Inhomogeneous coordinate system along with the augmented vector $\color{green}\bar{x}$. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <p>Now after the 2D points, we turn on to 2D lines. So, similar to the 2D points we can also represent 2D lines via the homogeneous coordinates as follows:</p> \[\{\bar{x} \hspace{0.2cm}\vert\hspace{0.2cm} \widetilde{\mathbf{l}}^\intercal \bar{x} = 0\} \Leftrightarrow \{x,y\hspace{0.2cm}\vert\hspace{0.2cm} ax+by+x=0\}\] <p>where \(\widetilde{\mathbf{l}}=(a,b,c)^\intercal\).<br/> Here we can see that the inner product of the vector \(\widetilde{\mathbf{l}}\) with the augmented vector \(\bar{x}\) gives us the line equation. Note that we can use any vector (not only the augmented one). We can normalize the line equation vector so that \(\widetilde{\mathbf{l}} = (x_x,n_y,d)^\intercal = (\boldsymbol{n},d)^\intercal\) with \(\lVert n \rVert _2 =1\). In this case, \(\boldsymbol{n}\) is the normal vector perpendicular to the line and \(d\) is its distance to the origin. An exception is the line at infinity \(\widetilde{\mathbf{l}}_\infty = (0,0,1)^\intercal\) which passes through all the ideal points i.e we can’t normalize these lines since we have to divide by zero.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/2Dlines_CV1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 2: 2D line equation where $\color{green}\hat{n}$ is the normal which is perpendicular to the line and $\color{green}d$ is the distance from the origin. <i>Image from book Computer Vision: Algorithms and Applications, 2nd ed. by Richard Szeliski<d-cite key="Szeliski:CV"></d-cite></i> </div> <p>Another important concept is the cross product. When using homogeneous coordinates, we can compute the intersection of two lines as \(\widetilde{\mathbf{x}} = \widetilde{\mathbf{l}}_1 \times \widetilde{\mathbf{l}}_2\) where the cross product is expressed as the product of a skew-symmetric matrix and a vector.<d-footnote>In this blog, we use squared brackets to distiguish matrices from vectors. </d-footnote></p> \[a \times b = [a]_\times b = \begin{bmatrix} 0 &amp; -a_3 &amp; a_2 \\ a_3 &amp; 0 &amp; -a_1 \\ -a_2 &amp; a_1 &amp; 0 \end{bmatrix} \begin{pmatrix} b_1 \\ b_2\\ b_3 \end{pmatrix} = \begin{pmatrix} a_2b_3 - a_3b_2 \\ a_3b1-a_1b_3 \\ a_1b_2-a_2b_1 \end{pmatrix}\] <p>Similarly, the line joining two points can be written as \(\widetilde{\mathbf{l}} = \bar{\mathbf{x}}_1 \times \bar{\mathbf{x}}_2\).</p> <blockquote> <p>How can we prove that indeed line joining two 2D points can be expressed as there cross products?</p> </blockquote> <details> <summary style="color:blue">Click to get the answer!</summary> <p style="color:blue"> Consider two lines in 2D homogeneous coordinates, $$\widetilde{\mathbf{l}}_1 = [a_1, b_1, c_1]^T$$ and $$\widetilde{\mathbf{l}}_2 = [a_2, b_2, c_2]^T$$ The lines can be represented as: $$\begin{align*} \widetilde{\mathbf{l}}_1 &amp;: a_1x + b_1y + c_1 = 0 \\ \widetilde{\mathbf{l}}_2 &amp;: a_2x + b_2y + c_2 = 0 \end{align*}$$ Now, consider a point $$\widetilde{x} = [x, y, 1]^T$$ that lies on both lines. This means: $$\begin{align*} \widetilde{\mathbf{l}}_1^T \widetilde{x} &amp;= 0 \\ \widetilde{\mathbf{l}}_2^T \widetilde{x} &amp;= 0 \end{align*}$$ This implies that $ \color{blue} \widetilde{\mathbf{x}}$ is orthogonal to both $\color{blue} \widetilde{\mathbf{l}}_1$ and $\color{blue} \widetilde{\mathbf{l}}_2$. The cross product of two vectors gives a vector which is orthogonal to both of the original vectors. Therefore, we can write: $$ [ \widetilde{x} = \widetilde{\mathbf{l}}_1 \times \widetilde{\mathbf{l}}_2 ] $$ This is the point of intersection of the two lines. Hence, the cross product provides a very convenient method for calculating the intersection point of two lines, which is why it's used in this context. It also generalizes easily to 3D, where the cross product of two planes gives their line of intersection. </p> </details> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/2Dlinearithmetic.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 3: a. Skew symmetric matrix $\color{green}[\mathbf{x}]_\times$ (Right) b. Geometrical representation of the two lines $\color{green} y = 1$ and $\color{green} x = 2$ in both the Cartesian and homogeneous coordinates. c. Cross product of the two lines gives us the point of intersection $\color{green} (2,1)$ where $\color{green}\widetilde{\mathbf{l}}_1^\intercal$ is represented by the skew symmetric matrix. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/2Dlinearithmetic_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 3: a. Skew symmetric matrix $\color{green}[\mathbb{x}]_\times$ (Right) b. Geometrical representation of the two lines $\color{green} x = 1$ and $\color{green} x = 2$ in both the Cartesian and homogeneous coordinates. c. Cross product of the two lines gives us (0,1,0) which indicates that the two lines are parallel and the intersection point is at infinity. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <p>More complex algebraic objects can be represented using polynomial homogeneous equations. For example, a conic section can be represented as a homogeneous quadratic equation in 2D as:</p> \[\{\bar{\mathbf{x}}\vert\bar{\mathbf{x}}^\intercal \mathbb{Q} \bar{\mathbf{x}} = 0\}\] <p>where $\mathbb{Q}$ is a symmetric matrix. The conic section can be a circle, ellipse, parabola or hyperbola depending on the eigenvalues of $\mathbb{Q}$. This is useful for multi-view geometry and camera calibration. For more details see Hartley and Zisserman<d-cite key="Hartley:CV"></d-cite>.</p> <h3 id="3d-points">3D Points</h3> <p>3D points in inhomogeneous coordinates can be represented as</p> \[\mathbf{x} = \begin{pmatrix} x \\ y \\ z \end{pmatrix} \in \mathbb{R}^3\] <p>or in homogeneous coordinates as</p> \[\widetilde{\mathbf{x}} = \begin{pmatrix} \widetilde{x} \\ \widetilde{y} \\ \widetilde{z} \\ \widetilde{w} \end{pmatrix} \in \mathbb{P}^3\] <p>with projective space \(\mathbb{P}^3 = \mathbb{R}^4 \backslash \{(0,0,0,0)\}\)</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/3DPoints.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 4: 3D line equation, r = (1 − λ)p + λq. The line is parameterized by λ ∈ R. The line passes through the points p and q. The line is infinite in both directions. <i>Image from book Computer Vision: Algorithms and Applications, 2nd ed. by Richard Szeliski<d-cite key="Szeliski:CV"></d-cite></i> </div> <h3 id="3d-planes">3D Planes</h3> <p>3D planes can also be represented in homogeneous coordinates as \(\widetilde{\mathbf{m}} = (a,b,c,d)^\intercal :\)</p> \[\{\mathbf{x}\hspace{0.2cm}\vert\hspace{0.2cm}\widetilde{\mathbf{m}}^\intercal\bar{\mathbf{x}}= 0\}\Leftrightarrow \{x,y,z\vert ax + by + cz + d = 0\}\] <p>Again we can normalize \(\widetilde{\mathbf{m}}\) so that \(\widetilde{\mathbf{m}} = (n_x,n_y,n_z,d)^\intercal = (\boldsymbol{n},d)^\intercal\) with \(\|\boldsymbol{n}\|_2 = 1\). In this case, <strong>n</strong> is the normal perpendicular to the plane and d is the distance of the plane from the origin.</p> <p>An exception is the plane at infinity, which is represented by \(\widetilde{\mathbf{m}} = (0,0,0,1)^\intercal\) which passes through all idead points for which \(\widetilde{w} = 0\).</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/3DPlanes.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 5: 3D Plane. The plane is at a distance d from the origin in coordinate systems with the normal vector n. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <h3 id="3d-lines">3D Lines</h3> <p>3D lines are less elegant than either 2D lines or 3D planes. One possible representation is to express points on a line as a linear combination of two points <strong>p</strong> and <strong>q</strong> on the line:</p> \[\{\mathbf{x}\vert\mathbf{x}=(1-\lambda)p + \lambda q \wedge \lambda \in \mathbb{R} \}\] <p>However, this representation uses 6 parameters for 4 degrees of freedom. <d-footnote>In the case of a 3D line, the line can be specified with four degrees of freedom: 1. Three degrees of freedom come from a point on the line, typically represented by a 3D coordinate (x, y, z). 2. The fourth degree of freedom comes from the direction of the line, which can be represented by the direction cosines of a unit vector along the line. </d-footnote></p> <p>A more compact representation is to use the <strong>two-plane parameterization</strong> or <strong>Plücker coordinates</strong>. More on this can be read in Hartley and Zisserman<d-cite key="Hartley:CV"></d-cite>.</p> <p>The 3D analog of 2D conics is a quadrix surface. They are useful in the study of multi-view geometry. They also serve as useful modeling primitives in terms of compact representations. E.g Superquadrics, in order to represent geometric objects in terms of simple primitives.</p> <h3 id="2d-transformations">2D Transformations</h3> <p>We will go through some common 2D transformations and their homogeneous representations.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/2Dtransformations.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 6: 2D Transformations. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <h4 id="translation-2d-translation-2-degrees-of-freedom">Translation (2D Translation, 2 Degrees of Freedom)</h4> <p>Translation is a simple transformation that shifts the origin of the coordinate system by a fixed amount. In homogeneous coordinates, translation is represented by a matrix multiplication with a translation matrix:</p> \[x' = x + t \Leftrightarrow \bar{\mathbf{x}}' = \begin{bmatrix} \mathbf{I} &amp; t \\ 0^\intercal &amp; 1 \end{bmatrix} \bar{\mathbf{x}}\] <p>With homogeneous coordinates we can easily chain and invert transformations.</p> <h4 id="euclidean-transformation-2d-rotation--2d-translation-3-degrees-of-freedom">Euclidean Transformation (2D Rotation + 2D Translation, 3 Degrees of Freedom)</h4> <p>Euclidean transformations are rigid body transformations that preserve distances and angles. They are represented by a matrix multiplication with a Euclidean transformation matrix:</p> \[x' = \mathbf{R}x + t \Leftrightarrow \bar{\mathbf{x}}' = \begin{bmatrix} \mathbf{R} &amp; t \\ 0^\intercal &amp; 1 \end{bmatrix} \bar{\mathbf{x}}\] <p>where \(\mathbf{R}\) is a 2x2 rotation matrix and \(t\) is a 2D translation vector.</p> <p>\(\mathbf{R} \in SO(2)\) is an orthonormal rotation matrix with \(\mathbf{R}^\intercal\mathbf{R} = \mathbf{I}\) and \(\det(\mathbf{R}) = 1\). Euclidean transformations preserve Euclidean distances and angles.</p> <h4 id="similarity-transformation-2d-rotation--2d-translation--2d-scaling-4-degrees-of-freedom">Similarity Transformation (2D Rotation + 2D Translation + 2D Scaling, 4 Degrees of Freedom)</h4> <p>Similarity transformations are Euclidean transformations that also preserve scale. They are represented by a matrix multiplication with a similarity transformation matrix:</p> \[x' = s\mathbf{R}x + t \Leftrightarrow \bar{\mathbf{x}}' = \begin{bmatrix} s\mathbf{R} &amp; t \\ 0^\intercal &amp; 1 \end{bmatrix} \bar{\mathbf{x}}\] <p>where \(\mathbf{R}\) is a 2x2 rotation matrix, \(t\) is a 2D translation vector and \(s\) is a scaling factor. Even though they preserve angles, but now distances change as we have introduced a scaling factor. \(\mathbf{R} \in SO(0)\) is a rotation matrix and s is an arbitrary scaling factor.</p> <h4 id="affine-transformation-2d-rotation--2d-translation--2d-scaling--2d-shear-6-degrees-of-freedom">Affine Transformation (2D Rotation + 2D Translation + 2D Scaling + 2D Shear, 6 Degrees of Freedom)</h4> <p>Affine transformations are similarity transformations that also preserve parallel lines. They are represented by a matrix multiplication with an affine transformation matrix:</p> \[x' = s\mathbf{R}x + t \Leftrightarrow \bar{\mathbf{x}}' = \begin{bmatrix} \mathbf{A} &amp; t \\ 0^\intercal &amp; 1 \end{bmatrix} \bar{\mathbf{x}}\] <p>where \(\mathbf{A}\) is a 2x2 matrix and \(t\) is a 2D translation vector. Affine transformations preserve parallel lines, but not angles or distances.</p> <h4 id="projective-transformation-homography2d-rotation--2d-translation--2d-scaling--2d-shear--2d-perspective-8-degrees-of-freedom">Projective Transformation (Homography,2D Rotation + 2D Translation + 2D Scaling + 2D Shear + 2D Perspective, 8 Degrees of Freedom)</h4> \[\widetilde{\mathbf{x}}' = \mathbf{H}\widetilde{\mathbf{x}} (\bar{\mathbf{x}} = \frac{1}{\widetilde{w}}\widetilde{\mathbf{x}})\] <p>where \(\mathbf{H} \in \mathbb{R}^{3\times3}\) is an arbitrary homogeneous 3 × 3 matrix. Projective transformations preserve straight lines.</p> <h3 id="2d-transformations-on-co-vectors">2D Transformations on Co-Vectors</h3> <p>Considering any perspective 2D transformation:</p> \[\widetilde{\mathbf{x}}' = \mathbf{H}\widetilde{\mathbf{x}}\] <p>where \(\mathbf{H} \in \mathbb{R}^{3\times3}\) is an arbitrary homogeneous 3 × 3 matrix.</p> <p>The transformed 2D line equation is given by:</p> \[\widetilde{\mathbf{l}}'^\intercal \mathbf{x}'= \widetilde{\mathbf{l}}'^\intercal \widetilde{\mathbf{H}}\widetilde{\mathbf{x}} = (\widetilde{\mathbf{H}}^\intercal\widetilde{\mathbf{l}}')^\intercal = \widetilde{\mathbf{l}}^\intercal \widetilde{\mathbf{x}}= 0\] <p>Therefore we have:</p> \[\widetilde{\mathbf{l}}' = \widetilde{\mathbf{H}}^{-\intercal} \widetilde{\mathbf{l}}\] <p>Thus the action of a projective transformation on a co-vector such as a 2D line or 3D normal can be represented by the transposed inverse of the matrix.</p> <h3 id="overview-of-2d-transformations">Overview of 2D Transformations</h3> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/ov2Dtrans.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 7: Overview of 2D Transformations. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <p>These 2D transformations form nested set of groups as shown in the figure above. The group of Euclidean transformations is a subgroup of the group of similarity transformations, which is a subgroup of the group of affine transformations, which is a subgroup of the group of projective transformations. And the transformations preserve the properties below them. For example, Euclidean transformations preserve Euclidean distances and angles, while similarity transformations preserve angles but not distances.</p> <p>And as we go up from projective to translation transformation, more restrictions are imposed on the transformation.</p> <h3 id="overview-of-3d-transformations">Overview of 3D Transformations</h3> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/ov3Dtrans.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 8: Overview of 3D Transformations. <i>Image from lecture slides of Computer Vision course taught by Prof. Dr. Andreas Geiger at University of Tuebingen.<d-cite key="Geiger:CV"></d-cite></i> </div> <p>3D transformations are defined analogously to 2D transformations. 3 x 4 matrices are extended with a fourth \([0^\intercal 1]\) row for homogeneous transforms. Also the transformations preserve the properties below them. For example, Euclidean transformations preserve Euclidean distances and angles, while similarity transformations preserve angles but not distances.</p> <h3 id="direct-linear-transform-for-homography-estimation">Direct Linear Transform for Homography Estimation</h3> <p>How can we estimate a homography from a set of point 2D correspondences?</p> <p>Let \(\mathbb{\chi} = \{\widetilde{\mathbf{x}}_i, \widetilde{\mathbf{x}}_i'\}_{i=1}^{N}\) denote a set of \(N\) point correspondences between two images, where \(\widetilde{\mathbf{x}}_i\) and \(\widetilde{\mathbf{x}}_i'\) are the homogeneous coordinates of the \(i\)-th point in the first and second image, respectively related by \(\widetilde{\mathbf{x}}' = \widetilde{H}\widetilde{\mathbf{x}}_i\).</p> <p>As the correspondence vectors are homogeneous, they have the same direction but differ in magnitude. Thus, the equation above can be expressed as \(\widetilde{\mathbf{x}}'_i \times \widetilde{H}\widetilde{\mathbf{x}}_i = 0.\)</p> <p>Using \(\widetilde{h}^\intercal_k\) to denote the k-th row of \(\widetilde{H}\), we can write linear equation in \(\widetilde{h}:\)</p> \[\underbrace{\left[\begin{array}{ccc} \mathbf{0}^{\top} &amp; -\tilde{w}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} &amp; \tilde{y}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} \\ \tilde{w}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} &amp; \mathbf{0}^{\top} &amp; -\tilde{x}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} \\ -\tilde{y}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} &amp; \tilde{x}_i^{\prime} \tilde{\mathbf{x}}_i^{\top} &amp; \mathbf{0}^{\top} \end{array}\right]}_{\mathbf{A}_i} \underbrace{\left[\begin{array}{c} \tilde{\mathbf{h}}_1 \\ \tilde{\mathbf{h}}_2 \\ \tilde{\mathbf{h}}_3 \end{array}\right]}_{\tilde{\mathbf{h}}}=\mathbf{0}\] <p>Each point correspondence yields two equations. Stacking all the equations into a 2N x 9 dimensional matrix A leads to the following constrained least squares problem:</p> <p>\(\widetilde{h}^{*} = \underset{\widetilde{\mathbf{h}}}\arg \min \hspace{0.1cm}\|\mathbf{A}\widetilde{\mathbf{h}}\|_2^2 + \lambda(\|\widetilde{\mathbf{h}}\|_2^2 - 1)\) \(\widetilde{h}^{*} = \underset{\widetilde{\mathbf{h}}}\arg \min\hspace{0.1cm} \widetilde{\mathbf{h}}^\intercal\mathbf{A}^\intercal\mathbf{A}\widetilde{\mathbf{h}} + \lambda(\widetilde{\mathbf{h}}^\intercal \widetilde{\mathbf{h}} - 1)\)</p> <p>Here we have fixed \(\|\widetilde{\mathbf{h}}\|_2^2 = 1\) as \(\widetilde{\mathbf{H}}\) i.e defined only up to scale. And the trivial soltuion to the above equation is \(\widetilde{\mathbf{h}} = \mathbf{0}\), which is not useful. Thus, we need to add a constraint to the problem to make it solvable. The solution to the above optimization problem is the singular vector corresponding to the smallest singular value of \(\mathbf{A}\). The resulting algorithm is called the <strong>Direct Linear Transformation (DLT) algorithm</strong>.</p> <h3 id="panorama-stitching">Panorama Stitching</h3> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/CV1/principle-panoramic-photo-stitching.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 9: Panorama Stitching. <i>Image from https://panoramic-photo-guide.com/best-photo-stitching-software-to-beginners.html</i> </div>]]></content><author><name>Suraj Bhor</name></author><category term="Computer"/><category term="Vision"/><category term="Computer_Vision,"/><category term="Image_Formation"/><summary type="html"><![CDATA[1.1 Primitives and Transformations]]></summary></entry></feed>